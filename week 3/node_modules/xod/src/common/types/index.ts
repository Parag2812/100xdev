export type IBaseType = undefined | null | number | boolean | string;

export interface ILinkList<T> {
  val: T;
  next: ILinkList<T> | null;
}

export interface IBinaryTree<T> {
  val: T;
  left: IBinaryTree<T> | null;
  right: IBinaryTree<T> | null;
}

export interface ITree<T> {
  val: T;
  childs: ITree<T>[];
}

export type ICompareFn<T> = (a: T, b: T) => number;
