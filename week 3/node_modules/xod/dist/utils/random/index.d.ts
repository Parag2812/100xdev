import { IBinaryTree, ITree } from '../../common';
declare function rInt(end: number): number;
declare function rInt(start: number, end: number): number;
declare function rString(): string;
declare function rArray<T>(fn: () => T, len: number): T[];
declare function rTable<T>(fn: () => T, h: number, w: number): T[][];
declare function rBinaryTree<T>(fn: () => T, n: number): IBinaryTree<T> | null;
declare function rTree<T>(fn: () => T, n: number): ITree<T> | null;
declare function intArray(n: number, start?: number): number[];
export declare const rand: {
    int: typeof rInt;
    string: typeof rString;
    array: typeof rArray;
    table: typeof rTable;
    binaryTree: typeof rBinaryTree;
    tree: typeof rTree;
    intArray: typeof intArray;
};
export {};
